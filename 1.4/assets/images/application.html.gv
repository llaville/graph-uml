digraph {
  graph [rankdir="LR"]
  subgraph cluster_0 {
    graph [style="radial" fillcolor="yellow:blue" gradientangle=180]
    label = "Bartlett\\GraphUml\\Formatter"
    "Bartlett\\GraphUml\\Formatter\\HtmlFormatter" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>HtmlFormatter</b></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ __construct(options : array)</td></tr>
    <tr><td align="left">+ getLabelExtension(reflection : ReflectionExtension) : string</td></tr>
    <tr><td align="left">+ getLabelClass(reflection : ReflectionClass) : string</td></tr>
    <tr><td align="left">+ getLabelConstants(reflection) : string</td></tr>
    <tr><td align="left">+ getLabelProperties(reflection : ReflectionClass) : string</td></tr>
    <tr><td align="left">+ getLabelFunctions(functions : array, class : string = '') : string</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\GraphUml\\Formatter\\AbstractFormatter" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b>«abstract»<br/>AbstractFormatter</b></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ __construct(options : array)</td></tr>
    <tr><td align="left">+ getFormat() : string</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\GraphUml\\Formatter\\FormatterInterface" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b>«interface»<br/>FormatterInterface</b></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «abstract» getFormat() : string</td></tr>
    <tr><td align="left">+ «abstract» getLabelExtension(reflection : ReflectionExtension) : string</td></tr>
    <tr><td align="left">+ «abstract» getLabelClass(reflection : ReflectionClass) : string</td></tr>
    <tr><td align="left">+ «abstract» getLabelConstants(reflection : mixed) : string</td></tr>
    <tr><td align="left">+ «abstract» getLabelProperties(reflection : ReflectionClass) : string</td></tr>
    <tr><td align="left">+ «abstract» getLabelFunctions(functions : array, class : string = '') : string</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\GraphUml\\Formatter\\RecordFormatter" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>RecordFormatter</b></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ getLabelExtension(reflection : ReflectionExtension) : string</td></tr>
    <tr><td align="left">+ getLabelClass(reflection : ReflectionClass) : string</td></tr>
    <tr><td align="left">+ getLabelConstants(reflection) : string</td></tr>
    <tr><td align="left">+ getLabelProperties(reflection : ReflectionClass) : string</td></tr>
    <tr><td align="left">+ getLabelFunctions(functions : array, class : string = '') : string</td></tr>
</table></td></tr>
</table>>]
  }
  subgraph cluster_1 {
    graph [style="filled" fillcolor="yellow:blue" gradientangle=45]
    label = "Bartlett\\GraphUml\\Generator"
    "Bartlett\\GraphUml\\Generator\\GraphVizGenerator" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>GraphVizGenerator</b></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ __construct(graphViz : Graphp\\GraphViz\\GraphViz)</td></tr>
    <tr><td align="left">+ getFormatter() : Bartlett\\GraphUml\\Formatter\\FormatterInterface</td></tr>
    <tr><td align="left">+ getName() : string</td></tr>
    <tr><td align="left">+ getPrefix() : string</td></tr>
    <tr><td align="left">+ createScript(graph : Graphp\\Graph\\Graph) : string</td></tr>
    <tr><td align="left">+ createImageFile(graph : Graphp\\Graph\\Graph, cmdFormat : string = '') : string</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\GraphUml\\Generator\\AbstractGenerator" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b>«abstract»<br/>AbstractGenerator</b></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ setOptions(values : array) : void</td></tr>
    <tr><td align="left">+ «abstract» getFormatter() : Bartlett\\GraphUml\\Formatter\\FormatterInterface</td></tr>
    <tr><td align="left">+ «abstract» getName() : string</td></tr>
    <tr><td align="left">+ getPrefix() : string</td></tr>
    <tr><td align="left">+ getLabelClass(reflection : ReflectionClass) : string</td></tr>
    <tr><td align="left">+ getLabelExtension(reflection : ReflectionExtension) : string</td></tr>
    <tr><td align="left">+ setExecutable(executable : string) : void</td></tr>
    <tr><td align="left">+ setFormat(format : string) : void</td></tr>
    <tr><td align="left">+ «abstract» createScript(graph : Graphp\\Graph\\Graph) : string</td></tr>
    <tr><td align="left">+ createImageFile(graph : Graphp\\Graph\\Graph, cmdFormat : string) : string</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\GraphUml\\Generator\\GeneratorInterface" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b>«interface»<br/>GeneratorInterface</b></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «abstract» setOptions(values : array) : void</td></tr>
    <tr><td align="left">+ «abstract» getFormatter() : Bartlett\\GraphUml\\Formatter\\FormatterInterface</td></tr>
    <tr><td align="left">+ «abstract» getName() : string</td></tr>
    <tr><td align="left">+ «abstract» getPrefix() : string</td></tr>
    <tr><td align="left">+ «abstract» getLabelClass(reflection : ReflectionClass) : string</td></tr>
    <tr><td align="left">+ «abstract» getLabelExtension(reflection : ReflectionExtension) : string</td></tr>
    <tr><td align="left">+ «abstract» setExecutable(executable : string) : void</td></tr>
    <tr><td align="left">+ «abstract» setFormat(format : string) : void</td></tr>
    <tr><td align="left">+ «abstract» createScript(graph : Graphp\\Graph\\Graph) : string</td></tr>
    <tr><td align="left">+ «abstract» createImageFile(graph : Graphp\\Graph\\Graph, cmdFormat : string) : string</td></tr>
</table></td></tr>
</table>>]
  }
  subgraph cluster_2 {
    graph [bgcolor="lightblue"]
    label = "Bartlett\\GraphUml"
    "Bartlett\\GraphUml\\ClassDiagramBuilder" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>ClassDiagramBuilder</b></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ __construct(generator : Bartlett\\GraphUml\\Generator\\GeneratorInterface, graph : Graphp\\Graph\\Graph, options : array = [])</td></tr>
    <tr><td align="left">+ createVertexClass(class, attributes : array = []) : Graphp\\Graph\\Vertex</td></tr>
    <tr><td align="left">+ createVertexExtension(extension, attributes : array = []) : Graphp\\Graph\\Vertex</td></tr>
    <tr><td align="left">+ createVerticesFromCallable(callback : callable, vertices : Generator) : void</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\GraphUml\\ClassDiagramBuilderInterface" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b>«interface»<br/>ClassDiagramBuilderInterface</b></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «abstract» createVertexClass(class : mixed, attributes : array = []) : Graphp\\Graph\\Vertex</td></tr>
    <tr><td align="left">+ «abstract» createVertexExtension(extension : mixed, attributes : array = []) : Graphp\\Graph\\Vertex</td></tr>
    <tr><td align="left">+ «abstract» createVerticesFromCallable(callback : callable, vertices : Generator) : void</td></tr>
</table></td></tr>
</table>>]
  }
  "Bartlett\\GraphUml\\Formatter\\HtmlFormatter" -> "Bartlett\\GraphUml\\Formatter\\AbstractFormatter" [arrowhead="empty" style="filled"]
  "Bartlett\\GraphUml\\Formatter\\HtmlFormatter" -> "Bartlett\\GraphUml\\Formatter\\FormatterInterface" [arrowhead="empty" style="dashed"]
  "Bartlett\\GraphUml\\Formatter\\RecordFormatter" -> "Bartlett\\GraphUml\\Formatter\\AbstractFormatter" [arrowhead="empty" style="filled"]
  "Bartlett\\GraphUml\\Formatter\\RecordFormatter" -> "Bartlett\\GraphUml\\Formatter\\FormatterInterface" [arrowhead="empty" style="dashed"]
  "Bartlett\\GraphUml\\Generator\\GraphVizGenerator" -> "Bartlett\\GraphUml\\Generator\\AbstractGenerator" [arrowhead="empty" style="filled"]
  "Bartlett\\GraphUml\\Generator\\GraphVizGenerator" -> "Bartlett\\GraphUml\\Generator\\GeneratorInterface" [arrowhead="empty" style="dashed"]
  "Bartlett\\GraphUml\\ClassDiagramBuilder" -> "Bartlett\\GraphUml\\ClassDiagramBuilderInterface" [arrowhead="empty" style="dashed"]
}
